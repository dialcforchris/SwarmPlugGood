// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/TheSwarmPrivatePCH.h"
#include "TheSwarm.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeTheSwarm() {}
static class UEnum* Behaviours_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern THESWARM_API class UEnum* Z_Construct_UEnum_TheSwarm_Behaviours();
		extern THESWARM_API class UPackage* Z_Construct_UPackage_TheSwarm();
		Singleton = GetStaticEnum(Z_Construct_UEnum_TheSwarm_Behaviours, Z_Construct_UPackage_TheSwarm(), TEXT("Behaviours"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_Behaviours(Behaviours_StaticEnum, TEXT("/Script/TheSwarm"));
	void ATheSwarmActor::StaticRegisterNativesATheSwarmActor()
	{
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmActor::StaticClass(),"SpawnActors",(Native)&ATheSwarmActor::execSpawnActors);
	}
	IMPLEMENT_CLASS(ATheSwarmActor, 4104696447);
	void ATheSwarmManager::StaticRegisterNativesATheSwarmManager()
	{
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmManager::StaticClass(),"AddRemoveAgents",(Native)&ATheSwarmManager::execAddRemoveAgents);
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmManager::StaticClass(),"alignment",(Native)&ATheSwarmManager::execalignment);
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmManager::StaticClass(),"ApplyBasicSwarming",(Native)&ATheSwarmManager::execApplyBasicSwarming);
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmManager::StaticClass(),"Boundaries",(Native)&ATheSwarmManager::execBoundaries);
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmManager::StaticClass(),"cohesion",(Native)&ATheSwarmManager::execcohesion);
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmManager::StaticClass(),"Collision",(Native)&ATheSwarmManager::execCollision);
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmManager::StaticClass(),"ConeTracer",(Native)&ATheSwarmManager::execConeTracer);
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmManager::StaticClass(),"CreateSwarm",(Native)&ATheSwarmManager::execCreateSwarm);
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmManager::StaticClass(),"GetDistance",(Native)&ATheSwarmManager::execGetDistance);
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmManager::StaticClass(),"separation",(Native)&ATheSwarmManager::execseparation);
	}
	IMPLEMENT_CLASS(ATheSwarmManager, 3649351880);
	void ATheSwarmManagerAnimal::StaticRegisterNativesATheSwarmManagerAnimal()
	{
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmManagerAnimal::StaticClass(),"AnimalApply",(Native)&ATheSwarmManagerAnimal::execAnimalApply);
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmManagerAnimal::StaticClass(),"LocalPoint",(Native)&ATheSwarmManagerAnimal::execLocalPoint);
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmManagerAnimal::StaticClass(),"MoveTo",(Native)&ATheSwarmManagerAnimal::execMoveTo);
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmManagerAnimal::StaticClass(),"RunFrom",(Native)&ATheSwarmManagerAnimal::execRunFrom);
		FNativeFunctionRegistrar::RegisterFunction(ATheSwarmManagerAnimal::StaticClass(),"StateManager",(Native)&ATheSwarmManagerAnimal::execStateManager);
	}
	IMPLEMENT_CLASS(ATheSwarmManagerAnimal, 2494653288);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHitResult();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECollisionChannel();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter_NoRegister();

	THESWARM_API class UEnum* Z_Construct_UEnum_TheSwarm_Behaviours();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmActor_SpawnActors();
	THESWARM_API class UClass* Z_Construct_UClass_ATheSwarmActor_NoRegister();
	THESWARM_API class UClass* Z_Construct_UClass_ATheSwarmActor();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmManager_AddRemoveAgents();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmManager_alignment();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmManager_ApplyBasicSwarming();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmManager_Boundaries();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmManager_cohesion();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmManager_Collision();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmManager_ConeTracer();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmManager_CreateSwarm();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmManager_GetDistance();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmManager_separation();
	THESWARM_API class UClass* Z_Construct_UClass_ATheSwarmManager_NoRegister();
	THESWARM_API class UClass* Z_Construct_UClass_ATheSwarmManager();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmManagerAnimal_AnimalApply();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmManagerAnimal_LocalPoint();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmManagerAnimal_MoveTo();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmManagerAnimal_RunFrom();
	THESWARM_API class UFunction* Z_Construct_UFunction_ATheSwarmManagerAnimal_StateManager();
	THESWARM_API class UClass* Z_Construct_UClass_ATheSwarmManagerAnimal_NoRegister();
	THESWARM_API class UClass* Z_Construct_UClass_ATheSwarmManagerAnimal();
	THESWARM_API class UPackage* Z_Construct_UPackage_TheSwarm();
	UEnum* Z_Construct_UEnum_TheSwarm_Behaviours()
	{
		UPackage* Outer=Z_Construct_UPackage_TheSwarm();
		static UEnum* ReturnEnum = NULL;
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Behaviours"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("IDLE")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("MOVETOTARGET")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("WAIT")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("RUN")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FLOCK")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FOLLOW")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Behaviours_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmActor.h"));
#endif
		}
		return ReturnEnum;
	}
	UFunction* Z_Construct_UFunction_ATheSwarmActor_SpawnActors()
	{
		struct TheSwarmActor_eventSpawnActors_Parms
		{
			UClass* cl;
		};
		UObject* Outer=Z_Construct_UClass_ATheSwarmActor();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SpawnActors"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(TheSwarmActor_eventSpawnActors_Parms));
			UProperty* NewProp_cl = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("cl"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(cl, TheSwarmActor_eventSpawnActors_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SwarmFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmActor.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ATheSwarmActor_NoRegister()
	{
		return ATheSwarmActor::StaticClass();
	}
	UClass* Z_Construct_UClass_ATheSwarmActor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_TheSwarm();
			OuterClass = ATheSwarmActor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmActor_SpawnActors());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_swarmClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("swarmClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(swarmClass, ATheSwarmActor), 0x0000000000000005, Z_Construct_UClass_UObject_NoRegister());
				UProperty* NewProp_velocity = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("velocity"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(velocity, ATheSwarmActor), 0x0000000000000005, Z_Construct_UScriptStruct_FVector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmActor_SpawnActors()); // 3305898021
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TheSwarmActor.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmActor.h"));
				MetaData->SetValue(NewProp_swarmClass, TEXT("Category"), TEXT("TheSwarmActor"));
				MetaData->SetValue(NewProp_swarmClass, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmActor.h"));
				MetaData->SetValue(NewProp_velocity, TEXT("Category"), TEXT("TheSwarmActor"));
				MetaData->SetValue(NewProp_velocity, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmActor.h"));
				MetaData->SetValue(NewProp_velocity, TEXT("ToolTip"), TEXT("Actor Velocity"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ATheSwarmActor(Z_Construct_UClass_ATheSwarmActor, TEXT("ATheSwarmActor"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ATheSwarmActor);
	UFunction* Z_Construct_UFunction_ATheSwarmManager_AddRemoveAgents()
	{
		UObject* Outer=Z_Construct_UClass_ATheSwarmManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddRemoveAgents"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SwarmFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ATheSwarmManager_alignment()
	{
		struct TheSwarmManager_eventalignment_Parms
		{
			ATheSwarmActor* b;
			float dist;
			ATheSwarmActor* a;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ATheSwarmManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("alignment"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(TheSwarmManager_eventalignment_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, TheSwarmManager_eventalignment_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_a = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("a"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(a, TheSwarmManager_eventalignment_Parms), 0x0000000000000080, Z_Construct_UClass_ATheSwarmActor_NoRegister());
			UProperty* NewProp_dist = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("dist"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(dist, TheSwarmManager_eventalignment_Parms), 0x0000000000000080);
			UProperty* NewProp_b = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("b"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(b, TheSwarmManager_eventalignment_Parms), 0x0000000000000080, Z_Construct_UClass_ATheSwarmActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SwarmFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Swarm Alignment"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ATheSwarmManager_ApplyBasicSwarming()
	{
		struct TheSwarmManager_eventApplyBasicSwarming_Parms
		{
			float tick;
		};
		UObject* Outer=Z_Construct_UClass_ATheSwarmManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ApplyBasicSwarming"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(TheSwarmManager_eventApplyBasicSwarming_Parms));
			UProperty* NewProp_tick = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("tick"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(tick, TheSwarmManager_eventApplyBasicSwarming_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SwarmFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Apply Basic Swarm Intelligence"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ATheSwarmManager_Boundaries()
	{
		struct TheSwarmManager_eventBoundaries_Parms
		{
			ATheSwarmActor* b;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ATheSwarmManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Boundaries"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(TheSwarmManager_eventBoundaries_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, TheSwarmManager_eventBoundaries_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_b = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("b"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(b, TheSwarmManager_eventBoundaries_Parms), 0x0000000000000080, Z_Construct_UClass_ATheSwarmActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SwarmFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ATheSwarmManager_cohesion()
	{
		struct TheSwarmManager_eventcohesion_Parms
		{
			ATheSwarmActor* b;
			float dist;
			ATheSwarmActor* a;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ATheSwarmManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("cohesion"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(TheSwarmManager_eventcohesion_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, TheSwarmManager_eventcohesion_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_a = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("a"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(a, TheSwarmManager_eventcohesion_Parms), 0x0000000000000080, Z_Construct_UClass_ATheSwarmActor_NoRegister());
			UProperty* NewProp_dist = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("dist"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(dist, TheSwarmManager_eventcohesion_Parms), 0x0000000000000080);
			UProperty* NewProp_b = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("b"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(b, TheSwarmManager_eventcohesion_Parms), 0x0000000000000080, Z_Construct_UClass_ATheSwarmActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SwarmFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Swarm Cohesion"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ATheSwarmManager_Collision()
	{
		struct TheSwarmManager_eventCollision_Parms
		{
			FHitResult hit;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ATheSwarmManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Collision"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(TheSwarmManager_eventCollision_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, TheSwarmManager_eventCollision_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_hit = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hit"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(hit, TheSwarmManager_eventCollision_Parms), 0x0000008000000080, Z_Construct_UScriptStruct_FHitResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SwarmFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ATheSwarmManager_ConeTracer()
	{
		struct TheSwarmManager_eventConeTracer_Parms
		{
			ATheSwarmActor* act;
			TEnumAsByte<ECollisionChannel> channel;
			FHitResult ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ATheSwarmManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ConeTracer"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(TheSwarmManager_eventConeTracer_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, TheSwarmManager_eventConeTracer_Parms), 0x0000008000000580, Z_Construct_UScriptStruct_FHitResult());
			UProperty* NewProp_channel = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("channel"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(channel, TheSwarmManager_eventConeTracer_Parms), 0x0000000000000080, Z_Construct_UEnum_Engine_ECollisionChannel());
			UProperty* NewProp_act = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("act"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(act, TheSwarmManager_eventConeTracer_Parms), 0x0000000000000080, Z_Construct_UClass_ATheSwarmActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SwarmFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("/\nCone trace elements\n/"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ATheSwarmManager_CreateSwarm()
	{
		UObject* Outer=Z_Construct_UClass_ATheSwarmManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateSwarm"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SwarmFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Makes Swarm"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ATheSwarmManager_GetDistance()
	{
		struct TheSwarmManager_eventGetDistance_Parms
		{
			AActor* a;
			AActor* b;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ATheSwarmManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetDistance"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(TheSwarmManager_eventGetDistance_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, TheSwarmManager_eventGetDistance_Parms), 0x0000000000000580);
			UProperty* NewProp_b = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("b"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(b, TheSwarmManager_eventGetDistance_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_a = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("a"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(a, TheSwarmManager_eventGetDistance_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SwarmFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ATheSwarmManager_separation()
	{
		struct TheSwarmManager_eventseparation_Parms
		{
			ATheSwarmActor* b;
			float dist;
			ATheSwarmActor* a;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ATheSwarmManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("separation"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(TheSwarmManager_eventseparation_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, TheSwarmManager_eventseparation_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_a = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("a"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(a, TheSwarmManager_eventseparation_Parms), 0x0000000000000080, Z_Construct_UClass_ATheSwarmActor_NoRegister());
			UProperty* NewProp_dist = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("dist"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(dist, TheSwarmManager_eventseparation_Parms), 0x0000000000000080);
			UProperty* NewProp_b = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("b"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(b, TheSwarmManager_eventseparation_Parms), 0x0000000000000080, Z_Construct_UClass_ATheSwarmActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SwarmFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Swarm Separation"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ATheSwarmManager_NoRegister()
	{
		return ATheSwarmManager::StaticClass();
	}
	UClass* Z_Construct_UClass_ATheSwarmManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_TheSwarm();
			OuterClass = ATheSwarmManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmManager_AddRemoveAgents());
				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmManager_alignment());
				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmManager_ApplyBasicSwarming());
				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmManager_Boundaries());
				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmManager_cohesion());
				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmManager_Collision());
				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmManager_ConeTracer());
				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmManager_CreateSwarm());
				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmManager_GetDistance());
				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmManager_separation());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(BoundariesOn, ATheSwarmManager, bool);
				UProperty* NewProp_BoundariesOn = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BoundariesOn"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(BoundariesOn, ATheSwarmManager), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(BoundariesOn, ATheSwarmManager), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(SeparationOn, ATheSwarmManager, bool);
				UProperty* NewProp_SeparationOn = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SeparationOn"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SeparationOn, ATheSwarmManager), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(SeparationOn, ATheSwarmManager), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(AlignmentOn, ATheSwarmManager, bool);
				UProperty* NewProp_AlignmentOn = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AlignmentOn"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AlignmentOn, ATheSwarmManager), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(AlignmentOn, ATheSwarmManager), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(CohesionOn, ATheSwarmManager, bool);
				UProperty* NewProp_CohesionOn = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CohesionOn"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(CohesionOn, ATheSwarmManager), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(CohesionOn, ATheSwarmManager), sizeof(bool), true);
				UProperty* NewProp_radius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("radius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(radius, ATheSwarmManager), 0x0000000000000005);
				UProperty* NewProp_traceLength = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("traceLength"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(traceLength, ATheSwarmManager), 0x0000000000000005);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(renderConeTrace, ATheSwarmManager, bool);
				UProperty* NewProp_renderConeTrace = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("renderConeTrace"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(renderConeTrace, ATheSwarmManager), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(renderConeTrace, ATheSwarmManager), sizeof(bool), true);
				UProperty* NewProp_totalV = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("totalV"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(totalV, ATheSwarmManager), 0x0000000000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_Bound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Bound"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Bound, ATheSwarmManager), 0x0000000000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_coh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("coh"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(coh, ATheSwarmManager), 0x0000000000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_ali = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ali"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ali, ATheSwarmManager), 0x0000000000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_sep = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("sep"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(sep, ATheSwarmManager), 0x0000000000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_AgentClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AgentClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(AgentClass, ATheSwarmManager), 0x0000000000000005, Z_Construct_UClass_UObject_NoRegister());
				UProperty* NewProp_ActorClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActorClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ActorClass, ATheSwarmManager), 0x0004000000000005, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_boundaryFix = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("boundaryFix"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(boundaryFix, ATheSwarmManager), 0x0000000000000005);
				UProperty* NewProp_MinZ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MinZ"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MinZ, ATheSwarmManager), 0x0000000000000005);
				UProperty* NewProp_MaxZ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxZ"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MaxZ, ATheSwarmManager), 0x0000000000000005);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(canFly, ATheSwarmManager, bool);
				UProperty* NewProp_canFly = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("canFly"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(canFly, ATheSwarmManager), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(canFly, ATheSwarmManager), sizeof(bool), true);
				UProperty* NewProp_MinY = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MinY"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MinY, ATheSwarmManager), 0x0000000000000005);
				UProperty* NewProp_MaxY = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxY"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MaxY, ATheSwarmManager), 0x0000000000000005);
				UProperty* NewProp_MinX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MinX"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MinX, ATheSwarmManager), 0x0000000000000005);
				UProperty* NewProp_MaxX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxX"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MaxX, ATheSwarmManager), 0x0000000000000005);
				UProperty* NewProp_speed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("speed"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(speed, ATheSwarmManager), 0x0000000000000005);
				UProperty* NewProp_scaleAli = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scaleAli"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(scaleAli, ATheSwarmManager), 0x0000000000000005);
				UProperty* NewProp_scaleSep = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scaleSep"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(scaleSep, ATheSwarmManager), 0x0000000000000005);
				UProperty* NewProp_scaleCoh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scaleCoh"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(scaleCoh, ATheSwarmManager), 0x0000000000000005);
				UProperty* NewProp_maxDist = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("maxDist"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(maxDist, ATheSwarmManager), 0x0000000000000005);
				UProperty* NewProp_swarmSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("swarmSize"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(swarmSize, ATheSwarmManager), 0x0000000000000005);
				UProperty* NewProp_swarmArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("swarmArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(swarmArray, ATheSwarmManager), 0x0000000000000014);
				UProperty* NewProp_swarmArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_swarmArray, TEXT("swarmArray"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_ATheSwarmActor_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmManager_AddRemoveAgents()); // 3111676630
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmManager_alignment()); // 3291105444
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmManager_ApplyBasicSwarming()); // 1992577712
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmManager_Boundaries()); // 3082282214
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmManager_cohesion()); // 504595337
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmManager_Collision()); // 3313329807
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmManager_ConeTracer()); // 2369755710
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmManager_CreateSwarm()); // 4016743282
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmManager_GetDistance()); // 8324743
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmManager_separation()); // 3522909950
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TheSwarmManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_BoundariesOn, TEXT("Category"), TEXT("SwarmFunctions"));
				MetaData->SetValue(NewProp_BoundariesOn, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_SeparationOn, TEXT("Category"), TEXT("SwarmFunctions"));
				MetaData->SetValue(NewProp_SeparationOn, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_AlignmentOn, TEXT("Category"), TEXT("SwarmFunctions"));
				MetaData->SetValue(NewProp_AlignmentOn, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_CohesionOn, TEXT("Category"), TEXT("SwarmFunctions"));
				MetaData->SetValue(NewProp_CohesionOn, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_CohesionOn, TEXT("ToolTip"), TEXT("/\n/bools to pick functions"));
				MetaData->SetValue(NewProp_radius, TEXT("Category"), TEXT("SwarmFunctions"));
				MetaData->SetValue(NewProp_radius, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_traceLength, TEXT("Category"), TEXT("SwarmFunctions"));
				MetaData->SetValue(NewProp_traceLength, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_renderConeTrace, TEXT("Category"), TEXT("SwarmFunctions"));
				MetaData->SetValue(NewProp_renderConeTrace, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_totalV, TEXT("Category"), TEXT("Debug"));
				MetaData->SetValue(NewProp_totalV, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_Bound, TEXT("Category"), TEXT("Debug"));
				MetaData->SetValue(NewProp_Bound, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_coh, TEXT("Category"), TEXT("Debug"));
				MetaData->SetValue(NewProp_coh, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_ali, TEXT("Category"), TEXT("Debug"));
				MetaData->SetValue(NewProp_ali, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_sep, TEXT("Category"), TEXT("Debug"));
				MetaData->SetValue(NewProp_sep, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_AgentClass, TEXT("Category"), TEXT("SwarmActor"));
				MetaData->SetValue(NewProp_AgentClass, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_ActorClass, TEXT("Category"), TEXT("SwarmActor"));
				MetaData->SetValue(NewProp_ActorClass, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_ActorClass, TEXT("ToolTip"), TEXT("The Actor Class used in the swarm"));
				MetaData->SetValue(NewProp_boundaryFix, TEXT("Category"), TEXT("Boundaries"));
				MetaData->SetValue(NewProp_boundaryFix, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_MinZ, TEXT("Category"), TEXT("Boundaries"));
				MetaData->SetValue(NewProp_MinZ, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_MaxZ, TEXT("Category"), TEXT("Boundaries"));
				MetaData->SetValue(NewProp_MaxZ, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_canFly, TEXT("Category"), TEXT("Boundaries"));
				MetaData->SetValue(NewProp_canFly, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_MinY, TEXT("Category"), TEXT("Boundaries"));
				MetaData->SetValue(NewProp_MinY, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_MaxY, TEXT("Category"), TEXT("Boundaries"));
				MetaData->SetValue(NewProp_MaxY, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_MinX, TEXT("Category"), TEXT("Boundaries"));
				MetaData->SetValue(NewProp_MinX, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_MaxX, TEXT("Category"), TEXT("Boundaries"));
				MetaData->SetValue(NewProp_MaxX, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_speed, TEXT("Category"), TEXT("TheSwarmManager"));
				MetaData->SetValue(NewProp_speed, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_scaleAli, TEXT("Category"), TEXT("TheSwarmManager"));
				MetaData->SetValue(NewProp_scaleAli, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_scaleSep, TEXT("Category"), TEXT("TheSwarmManager"));
				MetaData->SetValue(NewProp_scaleSep, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_scaleCoh, TEXT("Category"), TEXT("TheSwarmManager"));
				MetaData->SetValue(NewProp_scaleCoh, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_scaleCoh, TEXT("ToolTip"), TEXT("function scalar"));
				MetaData->SetValue(NewProp_maxDist, TEXT("Category"), TEXT("TheSwarmManager"));
				MetaData->SetValue(NewProp_maxDist, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_maxDist, TEXT("ToolTip"), TEXT("max agent distance"));
				MetaData->SetValue(NewProp_swarmSize, TEXT("Category"), TEXT("TheSwarmManager"));
				MetaData->SetValue(NewProp_swarmSize, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_swarmSize, TEXT("ToolTip"), TEXT("the size of the swarm"));
				MetaData->SetValue(NewProp_swarmArray, TEXT("Category"), TEXT("TheSwarmManager"));
				MetaData->SetValue(NewProp_swarmArray, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManager.h"));
				MetaData->SetValue(NewProp_swarmArray, TEXT("ToolTip"), TEXT("swarm array"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ATheSwarmManager(Z_Construct_UClass_ATheSwarmManager, TEXT("ATheSwarmManager"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ATheSwarmManager);
	UFunction* Z_Construct_UFunction_ATheSwarmManagerAnimal_AnimalApply()
	{
		struct TheSwarmManagerAnimal_eventAnimalApply_Parms
		{
			float tick;
		};
		UObject* Outer=Z_Construct_UClass_ATheSwarmManagerAnimal();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AnimalApply"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(TheSwarmManagerAnimal_eventAnimalApply_Parms));
			UProperty* NewProp_tick = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("tick"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(tick, TheSwarmManagerAnimal_eventAnimalApply_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SwarmFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManagerAnimal.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("go to destination"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ATheSwarmManagerAnimal_LocalPoint()
	{
		struct TheSwarmManagerAnimal_eventLocalPoint_Parms
		{
			AActor* act;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ATheSwarmManagerAnimal();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LocalPoint"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(TheSwarmManagerAnimal_eventLocalPoint_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, TheSwarmManagerAnimal_eventLocalPoint_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_act = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("act"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(act, TheSwarmManagerAnimal_eventLocalPoint_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AnimalBehaviour"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManagerAnimal.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ATheSwarmManagerAnimal_MoveTo()
	{
		struct TheSwarmManagerAnimal_eventMoveTo_Parms
		{
			FVector target;
			ATheSwarmActor* act;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ATheSwarmManagerAnimal();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MoveTo"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(TheSwarmManagerAnimal_eventMoveTo_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, TheSwarmManagerAnimal_eventMoveTo_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_act = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("act"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(act, TheSwarmManagerAnimal_eventMoveTo_Parms), 0x0000000000000080, Z_Construct_UClass_ATheSwarmActor_NoRegister());
			UProperty* NewProp_target = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("target"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(target, TheSwarmManagerAnimal_eventMoveTo_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SwarmFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManagerAnimal.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ATheSwarmManagerAnimal_RunFrom()
	{
		struct TheSwarmManagerAnimal_eventRunFrom_Parms
		{
			ACharacter* AC;
			ATheSwarmActor* act;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ATheSwarmManagerAnimal();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RunFrom"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(TheSwarmManagerAnimal_eventRunFrom_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, TheSwarmManagerAnimal_eventRunFrom_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_act = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("act"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(act, TheSwarmManagerAnimal_eventRunFrom_Parms), 0x0000000000000080, Z_Construct_UClass_ATheSwarmActor_NoRegister());
			UProperty* NewProp_AC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AC"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AC, TheSwarmManagerAnimal_eventRunFrom_Parms), 0x0000000000000080, Z_Construct_UClass_ACharacter_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SwarmFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManagerAnimal.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ATheSwarmManagerAnimal_StateManager()
	{
		struct TheSwarmManagerAnimal_eventStateManager_Parms
		{
			ATheSwarmActor* act;
			float tick;
			TEnumAsByte<Behaviours> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ATheSwarmManagerAnimal();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StateManager"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(TheSwarmManagerAnimal_eventStateManager_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, TheSwarmManagerAnimal_eventStateManager_Parms), 0x0000000000000580, Z_Construct_UEnum_TheSwarm_Behaviours());
			UProperty* NewProp_tick = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("tick"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(tick, TheSwarmManagerAnimal_eventStateManager_Parms), 0x0000000000000080);
			UProperty* NewProp_act = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("act"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(act, TheSwarmManagerAnimal_eventStateManager_Parms), 0x0000000000000080, Z_Construct_UClass_ATheSwarmActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AnimalBehaviour"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManagerAnimal.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ATheSwarmManagerAnimal_NoRegister()
	{
		return ATheSwarmManagerAnimal::StaticClass();
	}
	UClass* Z_Construct_UClass_ATheSwarmManagerAnimal()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ATheSwarmManager();
			Z_Construct_UPackage_TheSwarm();
			OuterClass = ATheSwarmManagerAnimal::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmManagerAnimal_AnimalApply());
				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmManagerAnimal_LocalPoint());
				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmManagerAnimal_MoveTo());
				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmManagerAnimal_RunFrom());
				OuterClass->LinkChild(Z_Construct_UFunction_ATheSwarmManagerAnimal_StateManager());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_playerAvoidance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("playerAvoidance"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(playerAvoidance, ATheSwarmManagerAnimal), 0x0000000000000005);
				UProperty* NewProp_target = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("target"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(target, ATheSwarmManagerAnimal), 0x0000000000000005, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_food = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("food"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(food, ATheSwarmManagerAnimal), 0x0000000000000005, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_destination = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("destination"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(destination, ATheSwarmManagerAnimal), 0x0000000000000005, Z_Construct_UScriptStruct_FVector());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(scatterOrRetreat, ATheSwarmManagerAnimal, bool);
				UProperty* NewProp_scatterOrRetreat = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scatterOrRetreat"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(scatterOrRetreat, ATheSwarmManagerAnimal), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(scatterOrRetreat, ATheSwarmManagerAnimal), sizeof(bool), true);
				UProperty* NewProp_RunMoveTo = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RunMoveTo"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(RunMoveTo, ATheSwarmManagerAnimal), 0x0000000000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_playerDistance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("playerDistance"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(playerDistance, ATheSwarmManagerAnimal), 0x0000000000000005);
				UProperty* NewProp_player = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("player"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(player, ATheSwarmManagerAnimal), 0x0000000000000005, Z_Construct_UClass_ACharacter_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmManagerAnimal_AnimalApply()); // 3951957920
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmManagerAnimal_LocalPoint()); // 1123975638
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmManagerAnimal_MoveTo()); // 3762034424
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmManagerAnimal_RunFrom()); // 3042894973
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheSwarmManagerAnimal_StateManager()); // 414082700
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TheSwarmManagerAnimal.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManagerAnimal.h"));
				MetaData->SetValue(NewProp_playerAvoidance, TEXT("Category"), TEXT("SwarmVariables"));
				MetaData->SetValue(NewProp_playerAvoidance, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManagerAnimal.h"));
				MetaData->SetValue(NewProp_playerAvoidance, TEXT("ToolTip"), TEXT("player avoidance multiplier"));
				MetaData->SetValue(NewProp_target, TEXT("Category"), TEXT("Target"));
				MetaData->SetValue(NewProp_target, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManagerAnimal.h"));
				MetaData->SetValue(NewProp_food, TEXT("Category"), TEXT("Food"));
				MetaData->SetValue(NewProp_food, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManagerAnimal.h"));
				MetaData->SetValue(NewProp_destination, TEXT("Category"), TEXT("AnimalBehaviour"));
				MetaData->SetValue(NewProp_destination, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManagerAnimal.h"));
				MetaData->SetValue(NewProp_scatterOrRetreat, TEXT("Category"), TEXT("AnimalBehaviour"));
				MetaData->SetValue(NewProp_scatterOrRetreat, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManagerAnimal.h"));
				MetaData->SetValue(NewProp_RunMoveTo, TEXT("Category"), TEXT("AnimalBehaviour"));
				MetaData->SetValue(NewProp_RunMoveTo, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManagerAnimal.h"));
				MetaData->SetValue(NewProp_playerDistance, TEXT("Category"), TEXT("AnimalBehaviour"));
				MetaData->SetValue(NewProp_playerDistance, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManagerAnimal.h"));
				MetaData->SetValue(NewProp_player, TEXT("Category"), TEXT("ActorToAvoid"));
				MetaData->SetValue(NewProp_player, TEXT("ModuleRelativePath"), TEXT("Classes/TheSwarmManagerAnimal.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ATheSwarmManagerAnimal(Z_Construct_UClass_ATheSwarmManagerAnimal, TEXT("ATheSwarmManagerAnimal"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ATheSwarmManagerAnimal);
	UPackage* Z_Construct_UPackage_TheSwarm()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/TheSwarm")), false, false));
			ReturnPackage->PackageFlags |= PKG_CompiledIn | 0x00000000;
			FGuid Guid;
			Guid.A = 0xDB254875;
			Guid.B = 0x972A9D36;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
